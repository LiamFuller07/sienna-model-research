import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import seaborn as sns

# Conversation embeddings get lodaded from the csv local on my comuter'conversation_embeddings_psa.csv'
embeddings_df = pd.read_csv('conversation_embeddings_psa.csv')

conversations_df = pd.read_csv('updated_conversations.csv')

scaler = StandardScaler()
X = scaler.fit_transform(embeddings_df.values)

# Initialized PCA with 2 components for 2D visualization, 2d is the easiest.
pca = PCA(n_components=2)

X_pca = pca.fit_transform(X)

explained_variance = pca.explained_variance_ratio_

pca_df = pd.DataFrame(data={'PCA1': X_pca[:, 0], 'PCA2': X_pca[:, 1]})

#new column
pca_df['Title'] = ['Topic ' + str(i) for i in range(1, len(pca_df) + 1)]

label_indices = np.random.choice(len(pca_df), 10, replace=False)

# Plotting the PCA results with short titles
plt.figure(figsize=(12, 10))
sns.scatterplot(x='PCA1', y='PCA2', data=pca_df)

for idx in label_indices:
    row = pca_df.iloc[idx]
    plt.text(row['PCA1'], row['PCA2'], row['Title'], fontsize=9, ha='right')

plt.title('2D PCA of Conversation Embeddings with Short Titles')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.grid(True)
plt.show()
